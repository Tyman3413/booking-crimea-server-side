import { Controller, Get, Query } from '@nestjs/common';
import { CountriesService } from './countries.service';
import { ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger';
import { Country } from './country.entity';
import { UtilsService } from '../common/utils/utils.service';

@ApiTags('–°—Ç—Ä–∞–Ω—ã üè≥Ô∏è')
@Controller('countries')
export class CountriesController {
  constructor(private readonly countriesService: CountriesService) {}

  @ApiOperation({ summary: '–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω' })
  @ApiQuery({
    name: 'search',
    description: '–ù–∞–∑–≤–∞–Ω–∏–µ, –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤ base64',
    required: false,
  })
  @Get()
  async findAll(@Query('search') search?: string): Promise<Country[]> {
    return await this.countriesService.findAll(
      UtilsService.base64ToString(search),
    );
  }
}
